@inject IModalService ModalService
@inject HttpClient Http
@inject IToastService toastService

<div class="simple-form">

    <div class="form-group">
        <label for="movie-title">Title</label>
        <input @bind="@Movie.Title" type="text" class="form-control" placeholder="@Movie.Title"/>
    </div>

    <div class="form-group">
        <label for="movie-imageURL">ImageURL</label>
        <input @bind="@Movie.ImageURL" type="text" class="form-control" placeholder="@Movie.ImageURL"/>
    </div>

    <div class="form-group">
        <label for="movie-quantity">Quantity</label>
        <input @bind="@Movie.Quantity" type="number" max="5" min="0" class="form-control"  placeholder="@Movie.Quantity"/>
    </div>
    
    <div class="form-group">
        <label for="movie-description">Description</label>
        <textarea @bind="@Movie.Description" class="form-control" id="exampleFormControlTextarea1" rows="3" placeholder="@Movie.Description"></textarea>
    </div>

    <button @onclick="Edit" class="btn btn-primary">Edit</button>
    <button @onclick="BlazoredModal.Cancel" class="btn btn-secondary">Cancel</button>
    </div>
@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    [Parameter] public Movie Movie { get; set; }

    private async Task Edit()
    {
        await Http.PutJsonAsync($"http://localhost:4000/api/movies/{Movie.Id}", Movie);
        toastService.ShowSuccess("Your movie was succesfully edited", "Movie Edited!");
        BlazoredModal.Close(ModalResult.Ok<Movie>(Movie));
    }
}