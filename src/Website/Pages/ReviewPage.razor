@page "/Reviews"
@inject  HttpClient Http;
@inject IModalService Modal

<head>
  <base href="~/" />
<style>
.rating {
  display: inline-block;
  unicode-bidi: bidi-override;
  color: #888888;
  font-size: 25px;
  height: 25px;
  width: auto;
  margin: 0 auto;
  position: relative;
  padding: 0;
  text-align: right;
}

.rating-upper {
  color: #c52b2f;
  padding: 0;
  position: absolute;
  z-index: 1;
  display: flex;
  top: 0;
  left: 0;
  overflow: hidden;
}

.rating-lower {
  padding: 0;
  display: flex;
  z-index: 0;
}
</style>
</head>
@if (_reviews != null)
{   
    <input @bind-value="searchText" @bind-value:event="oninput" placeholder="Search for Movie Title"/>

    <div class="container">
  <div class="card-columns">
    @foreach (var review in _reviews.Where(x => x.Movie.Title.ToLower().Contains(searchText.ToLower())).ToList())
    {
    <div class="card" style="width: 20rem;">
    <img src= "@review.Movie.ImageURL"  class="card-img-top" alt="x...">
    
    <div class="card-body">
    <h5 class="card-title">@review.Movie.Title</h5>
    <p class="card-reviewer">#@review.FilmStudioId. @review.FilmStudio.Name</p>
    <p class="card-text">@review.Comment</p>
    
    <div class="rating">
    <div class="rating-upper" style="width: @(review.Rating*20)%"> 
        <span>★</span>
        <span>★</span>
        <span>★</span>
        <span>★</span>
        <span>★</span>
    </div>
    <div class="rating-lower">
        <span>★</span>
        <span>★</span>
        <span>★</span>
        <span>★</span>
        <span>★</span>
    </div>
</div>
    </div>
    <div class="card-footer">
            <button @onclick="@(() => Edit(review))" class="btn btn-info">Edit</button>
            <button @onclick="@(() => Delete(review))" class="btn btn-danger">Delete</button>
        </div>
    </div>
    }
      </div>
</div>
}
else{
    <p>Couldnt be loaded</p>
}

@code{
    private string searchText = "";
    private List<Review> _reviews;
    protected override async Task OnInitializedAsync()
    {
        _reviews = await Http.GetJsonAsync<List<Review>>("http://localhost:4000/api/reviews");
    }
     void Delete(Review review)
    {
        var parameters = new ModalParameters();
        parameters.Add("Review", review);

        Modal.Show<DeleteReview>("Do you wish to delete this review?" , parameters);
    }
    void Edit(Review review)
    {
        var parameters = new ModalParameters();
        parameters.Add("Review", review);
        Modal.Show<EditReview>("Do you wish to delete this review?" , parameters);
    }
}