@inject IModalService ModalService
@inject HttpClient Http
@inject IToastService toastService

@if(_filmstudios != null){
<div class="simple-form">
    

    <div class="form-group">
        <label for="movie-studioId">FilmStudio</label>
        <select class="form-control" @bind="@_filmstudioId">
        @foreach (var item in _filmstudios)
        {
        <option value="@item.Id">@item.Name</option>
        }
        </select>
    </div>

    <div class="form-group">
        <form action="/action_page.php">
    <label for="expireDate">Expire Date:</label>
    <input type="date"  @bind="_date">
    </form>
    </div>

    <button @onclick="Add" class="btn btn-primary">Submit</button>
    <button @onclick="BlazoredModal.Cancel" class="btn btn-secondary">Cancel</button>
    </div>
}
@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    [Parameter] public Movie Movie { get; set; }
    FilmStudio[] _filmstudios;
    int _filmstudioId;
    DateTime _date;

    private async Task Add()
    {
        var _movieToRent = new RentLog(){FilmStudioId = _filmstudioId, MovieId = Movie.Id, ExpireDate = _date};
        await Http.PostJsonAsync("http://localhost:4000/api/rentlogs", _movieToRent);
        toastService.ShowSuccess("The Movie was succesfully rented to ", "Movie Rented!");
        BlazoredModal.Close();
    }
    protected override async Task OnInitializedAsync()
    {
        _filmstudios = await Http.GetJsonAsync<FilmStudio[]>("http://localhost:4000/api/filmstudios");
    }
}